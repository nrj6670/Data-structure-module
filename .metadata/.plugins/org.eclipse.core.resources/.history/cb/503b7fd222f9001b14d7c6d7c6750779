package com.app.core.binarytree;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;

class BinaryTreeTest {
	/*@Test
	void testPreOrder() {
		BinaryTree bt = new BinaryTree();
		int[] element = bt.BuildTreeForPreOrder();
		int[] traversalResult = bt.PreOrder();

		assertArrayEquals(element, traversalResult);
	}
	*/
	
	@Test
	void testPostOrder() {
		BinaryTree tree = new BinaryTree();
		tree.root = new BinaryTreeNode(1);
		tree.root.lChild = new BinaryTreeNode(2);
		tree.root.rChild = new BinaryTreeNode(3);
		tree.root.lChild.rChild = new BinaryTreeNode(4);
		tree.root.rChild.lChild = new BinaryTreeNode(5);
		tree.root.rChild.rChild = new BinaryTreeNode(6);
		/*
		 				1
		 			  /	   \
		  			 2      3
		  			 \	   /  \
		  			  4   5    6
		  			  
		  	post order : 4 2 5 6 3 1
		*/
		
		int size = tree.GetNodesCount();
		int [] postOrderArray = {4, 2, 5, 6, 3, 1};
		int [] postOrderResult = tree.PostOrder();
		
		boolean isPostOrder = true;
		
		for(int i=0; i<postOrderArray.length; i++) {
			if(postOrderArray[i] != postOrderResult[i]) {
				isPostOrder = false;
				break;
			}
		}
		assertTrue(size == postOrderArray.length && isPostOrder);
	}

}
